#encoding:utf-8

import pygame
from sys import exit
import random


class Shot:

	def __init__(self):
		self.x=0
		self.y=-5
		self.image=pygame.image.load("shot.PNG").convert_alpha()
		self.active=False

	def restart(self):
		mousex,mousey=pygame.mouse.get_pos()
		self.x=mousex-self.image.get_width()/2
		self.y=mousey-self.image.get_height()/2
		self.active=True

	def move(self):
		if self.active:
			self.y=self.y-5
		if self.y<0:
			self.active=False


class Enemy:
	def restart(self):
		self.x=random.randint(40,500)
		self.y=random.randint(-200,-50)
		self.speed=random.randint(5,10)+0.1

	def __init__(self):
		self.restart()
		self.image=pygame.image.load("enemy.PNG")

	def move(self):
		if self.y<300:
			self.y+=self.speed
		else:
			self.restart()

pygame.init()
screen=pygame.display.set_mode((600,500),0,32)
pygame.display.set_caption("plane game")

background=pygame.image.load("images-ch2-1.jpg").convert()
plane=pygame.image.load("plane.PNG").convert()


enemyplane=Enemy()


bullets=[]
for i in range(5):
	bullets.append(Shot())

count_b=len(bullets)
index_b=0
interval_b=0



while True:
	for event in pygame.event.get():
		if event.type==pygame.QUIT:
			pygame.quit()
			exit()

#要靠前，否则覆盖其它blit内容
	screen.blit(background,(0,0))

	interval_b=interval_b-1
	if interval_b<0:
		bullets[index_b].restart()
		interval_b=100
		index_b=(index_b+1)%count_b

	for b in bullets:
		if b.active:
			b.move()
			screen.blit(b.image,(b.x,b.y))

	x,y=pygame.mouse.get_pos()
	plane_x=x-plane.get_width()/2
	plane_y=y-plane.get_height()/2
	screen.blit(plane,(plane_x,plane_y))

	enemyplane.move()
	screen.blit(enemyplane.image,(enemyplane.x,enemyplane.y))

	pygame.display.update()	
